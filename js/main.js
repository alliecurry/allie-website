// Generated by CoffeeScript 1.9.1
var gutter = 20;
var base = 60;
var isMobile = false;
(function() {
    function openTab(url) {
      var win = window.open(url, '_blank');
      win.focus();
    }
  
    $(function() {
      // ON CLICK
      $(document).on("click touchend", ".gridly .brick", function(event) {
        var $this, size, originalSize;
        event.preventDefault();
        event.stopPropagation();
        $this = $(this);
        
        // Open links
        var link = $this.attr('link');
        if (link != undefined) {
          openTab(link);
          return;
        }
        
        // Toggle block size
        toggleSize($this);
        return $('.gridly').gridly('layout');
      });
      
      function toggleSize(elem) {
        elem.toggleClass('small');
        elem.toggleClass('large');

        originalSize = elem.width();
        if (elem.hasClass('small')) {
//          size = (originalSize - gutter) / 2 ;
          size = isMobile ? 100 : 200;
        } else if (elem.hasClass('large')) {
//          size = (originalSize * 2) + gutter;
          size = isMobile ? 240: 300;
        }
        elem.data('width', size);
        elem.data('height', size);
      }

      // DELETE
      $(document).on("click", ".gridly .delete", function(event) {
        var $this;
        event.preventDefault();
        event.stopPropagation();
        $this = $(this);
        $this.closest('.brick').remove();
        return $('.gridly').gridly('layout');
      });
    });

}).call(this);

(function($, viewport) {

    // Execute only after document has fully loaded
    $(document).ready(function() {
      return resizeGrid($, viewport);
    });

    // Execute code each time window size changes
    $(window).resize(
      viewport.changed(function(){
        return resizeGrid($, viewport);
      })
    );

    resizeGrid = function($, viewport) {
        console.log(viewport.current());
        var b, g, c;
        
        if (viewport.is('xs')) {
          isMobile = true;
            b = 30;
            g = 20;
            c = 8;

        } else if (viewport.is('>=sm')) {
          isMobile = false;
            b = 60;
            g = 20;
            c = 10;
        }
        
        gutter = g;
        base = b;
        return $('.gridly').gridly({
              base: b,
              gutter: g,
              columns: c
        });
    }

})(jQuery, ResponsiveBootstrapToolkit);
